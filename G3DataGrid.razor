@typeparam TItem
@inherits SelectComponent<TItem>

<table>
    <thead>
        <tr>
            @if (Columns.Any())
            {
                foreach (var column in Columns)
                {
                    <td width="@column.Width" height="@column.Height">@column.Header</td>
                }
            }
            else
            {
                foreach (var header in GetAutoHeaders())
                {
                    <td>@header</td>
                }
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var item in ItemsSource)
        {
            <tr>
                @if (Columns.Any())
                {
                    foreach (var column in Columns)
                    {
                        <td width="@column.Width" height="@column.Height">@column.GetValue(item)</td>
                    }
                }
                else
                {
                    foreach (var value in GetAutoValues(item))
                    {
                        <td>@value</td>
                    }
                }
                }
            </tr>
        }
    </tbody>
    <tfoot>
        <tr>
            <td colspan="4" align="center">This is the <b>footer</b> section of the table</td>
        </tr>
    </tfoot>
</table>

@code {
    protected readonly IDictionary<string, string> columns = new Dictionary<string, string>();

    [Parameter] public IEnumerable<Column<TItem>> Columns { get; set; } = Enumerable.Empty<Column<TItem>>();

    protected IEnumerable<string> GetAutoHeaders()
    {
        var properties = typeof(TItem).GetProperties();
        foreach (var propertyName in properties.Select(x => x.Name))
        {
            yield return propertyName;
        }
    }

    protected IEnumerable<string> GetAutoValues(TItem t)
    {
        var properties = typeof(TItem).GetProperties();
        foreach (var propertyName in properties)
        {
            yield return propertyName.GetValue(t)?.ToString() ?? string.Empty;
        }
    }
}