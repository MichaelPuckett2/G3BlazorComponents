@typeparam TItem
@inherits SelectComponent<TItem>

<table>
    <thead>
        <tr>
            @if (Columns.Any())
            {
                foreach (var column in Columns)
                {
                    <th width="@column.Width">
                        @if (HeaderTemplate is null)
                        {
                            column.GetActualHeader();
                        }
                        else
                        {
                            @: @HeaderTemplate(column.GetActualHeader())
                        }
                    </th>
                }
            }
            else
            {
                foreach (var header in GetAutoHeaders())
                {
                    <th>
                        @if (HeaderTemplate is null)
                        {
                            @header
                        }
                        else
                        {
                            @: @HeaderTemplate(header)
                        }
                    </th>
                }
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var item in ItemsSource)
        {
            if (RowTemplate is null)
            {
                <tr>
                    @if (Columns.Any())
                    {
                        foreach (var column in Columns)
                        {
                            <td width="@column.Width">
                                @if (ItemTemplate is null)
                                {
                                    @column.GetValue(item)
                                }
                                else
                                {
                                    @: @ItemTemplate(item)
                                }
                            </td>
                        }
                    }
                    else
                    {
                        foreach (var value in GetAutoValues(item))
                        {
                            <td>
                                @if (ItemTemplate is null)
                                {
                                    @value
                                }
                                else
                                {
                                    @: @ItemTemplate(item)
                                }
                            </td>
                        }
                    }
                </tr>
            }
            else
            {
                <tr>
                    @RowTemplate(item)
                </tr>
            }
        }
    </tbody>
    @if (FooterTemplate is not null)
    {
        <tfoot>
            <tr>
                @FooterTemplate
            </tr>
        </tfoot>
    }
</table>

@code {
    protected readonly IDictionary<string, string> columns = new Dictionary<string, string>();

    [Parameter] public IEnumerable<Column<TItem>> Columns { get; set; } = Enumerable.Empty<Column<TItem>>();
    [Parameter] public RenderFragment<string> HeaderTemplate { get; set; }
    [Parameter] public RenderFragment FooterTemplate { get; set; }

    /// <summary>
    /// The template for a table row. You should wrap your template inside <tr>..</tr>
    /// </summary>
    [Parameter] public RenderFragment<TItem> RowTemplate { get; set; }

    protected IEnumerable<string> GetAutoHeaders()
    {
        var properties = typeof(TItem).GetProperties();
        foreach (var propertyName in properties.Select(x => x.Name))
        {
            yield return propertyName;
        }
    }

    protected IEnumerable<string> GetAutoValues(TItem t)
    {
        var properties = typeof(TItem).GetProperties();
        foreach (var propertyName in properties)
        {
            yield return propertyName.GetValue(t)?.ToString() ?? string.Empty;
        }
    }
}